// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_tx_qpsk_Block_entry11_proc10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input2,
        temp1_re500_din,
        temp1_re500_full_n,
        temp1_re500_write,
        input1,
        temp1_im501_din,
        temp1_im501_full_n,
        temp1_im501_write
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] input2;
output  [15:0] temp1_re500_din;
input   temp1_re500_full_n;
output   temp1_re500_write;
input  [0:0] input1;
output  [15:0] temp1_im501_din;
input   temp1_im501_full_n;
output   temp1_im501_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg temp1_re500_write;
reg temp1_im501_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] mapping_address0;
reg    mapping_ce0;
wire   [1:0] mapping_q0;
wire   [0:0] mapping_address1;
reg    mapping_ce1;
wire   [1:0] mapping_q1;
reg    temp1_re500_blk_n;
wire    ap_CS_fsm_state18;
reg    temp1_im501_blk_n;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_127_p1;
reg   [63:0] conv_reg_659;
wire    ap_CS_fsm_state3;
wire   [63:0] grp_fu_130_p1;
reg   [63:0] conv5_reg_664;
wire   [63:0] grp_fu_117_p2;
reg   [63:0] d_reg_669;
wire    ap_CS_fsm_state16;
wire   [63:0] grp_fu_122_p2;
reg   [63:0] d_1_reg_674;
wire   [15:0] select_ln560_fu_388_p3;
reg   [15:0] select_ln560_reg_679;
wire    ap_CS_fsm_state17;
wire   [15:0] select_ln560_1_fu_631_p3;
reg   [15:0] select_ln560_1_reg_684;
wire   [63:0] zext_ln541_fu_133_p1;
wire   [63:0] zext_ln541_1_fu_138_p1;
reg    ap_block_state1;
reg    ap_block_state18;
wire    ap_CS_fsm_state4;
wire  signed [31:0] grp_fu_127_p0;
wire  signed [31:0] grp_fu_130_p0;
wire   [63:0] ireg_fu_153_p1;
wire   [10:0] exp_tmp_fu_168_p4;
wire   [51:0] trunc_ln554_fu_182_p1;
wire   [52:0] p_Result_1_fu_186_p3;
wire   [53:0] zext_ln558_fu_194_p1;
wire   [0:0] p_Result_s_fu_160_p3;
wire   [53:0] man_V_1_fu_198_p2;
wire   [62:0] trunc_ln544_fu_156_p1;
wire   [11:0] zext_ln455_fu_178_p1;
wire   [11:0] F2_fu_218_p2;
wire   [0:0] icmp_ln570_fu_224_p2;
wire   [11:0] add_ln570_fu_230_p2;
wire   [11:0] sub_ln570_fu_236_p2;
wire  signed [11:0] sh_amt_fu_242_p3;
wire   [53:0] man_V_2_fu_204_p3;
wire  signed [31:0] sext_ln570_fu_250_p1;
wire   [53:0] zext_ln575_fu_270_p1;
wire   [53:0] ashr_ln575_fu_274_p2;
wire   [0:0] tmp_fu_284_p3;
wire   [0:0] icmp_ln574_fu_264_p2;
wire   [15:0] trunc_ln575_fu_280_p1;
wire   [15:0] select_ln574_2_fu_292_p3;
wire   [7:0] tmp_4_fu_308_p4;
wire   [15:0] trunc_ln572_fu_260_p1;
wire   [15:0] sext_ln570cast_fu_324_p1;
wire   [0:0] icmp_ln592_fu_318_p2;
wire   [15:0] shl_ln593_fu_328_p2;
wire   [0:0] icmp_ln560_fu_212_p2;
wire   [0:0] icmp_ln571_fu_254_p2;
wire   [0:0] xor_ln560_fu_342_p2;
wire   [0:0] and_ln571_fu_348_p2;
wire   [15:0] select_ln592_fu_334_p3;
wire   [0:0] or_ln571_fu_362_p2;
wire   [0:0] xor_ln571_fu_368_p2;
wire   [0:0] and_ln570_fu_374_p2;
wire   [15:0] select_ln574_fu_300_p3;
wire   [15:0] select_ln571_fu_354_p3;
wire   [15:0] select_ln570_fu_380_p3;
wire   [63:0] ireg_1_fu_396_p1;
wire   [10:0] exp_tmp_1_fu_411_p4;
wire   [51:0] trunc_ln554_1_fu_425_p1;
wire   [52:0] p_Result_3_fu_429_p3;
wire   [53:0] zext_ln558_1_fu_437_p1;
wire   [0:0] p_Result_2_fu_403_p3;
wire   [53:0] man_V_4_fu_441_p2;
wire   [62:0] trunc_ln544_1_fu_399_p1;
wire   [11:0] zext_ln455_1_fu_421_p1;
wire   [11:0] F2_1_fu_461_p2;
wire   [0:0] icmp_ln570_1_fu_467_p2;
wire   [11:0] add_ln570_1_fu_473_p2;
wire   [11:0] sub_ln570_1_fu_479_p2;
wire  signed [11:0] sh_amt_1_fu_485_p3;
wire   [53:0] man_V_5_fu_447_p3;
wire  signed [31:0] sext_ln570_1_fu_493_p1;
wire   [53:0] zext_ln575_1_fu_513_p1;
wire   [53:0] ashr_ln575_1_fu_517_p2;
wire   [0:0] tmp_6_fu_527_p3;
wire   [0:0] icmp_ln574_1_fu_507_p2;
wire   [15:0] trunc_ln575_1_fu_523_p1;
wire   [15:0] select_ln574_3_fu_535_p3;
wire   [7:0] tmp_7_fu_551_p4;
wire   [15:0] trunc_ln572_1_fu_503_p1;
wire   [15:0] sext_ln570_1cast_fu_567_p1;
wire   [0:0] icmp_ln592_1_fu_561_p2;
wire   [15:0] shl_ln593_1_fu_571_p2;
wire   [0:0] icmp_ln560_1_fu_455_p2;
wire   [0:0] icmp_ln571_1_fu_497_p2;
wire   [0:0] xor_ln560_1_fu_585_p2;
wire   [0:0] and_ln571_1_fu_591_p2;
wire   [15:0] select_ln592_1_fu_577_p3;
wire   [0:0] or_ln571_1_fu_605_p2;
wire   [0:0] xor_ln571_1_fu_611_p2;
wire   [0:0] and_ln570_1_fu_617_p2;
wire   [15:0] select_ln574_1_fu_543_p3;
wire   [15:0] select_ln571_1_fu_597_p3;
wire   [15:0] select_ln570_2_fu_623_p3;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
end

top_tx_qpsk_Block_entry11_proc10_mapping_ROM_AUTO_1R #(
    .DataWidth( 2 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
mapping_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mapping_address0),
    .ce0(mapping_ce0),
    .q0(mapping_q0),
    .address1(mapping_address1),
    .ce1(mapping_ce1),
    .q1(mapping_q1)
);

top_tx_ddiv_64ns_64ns_64_13_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_13_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_659),
    .din1(64'd4609047870845172685),
    .ce(1'b1),
    .dout(grp_fu_117_p2)
);

top_tx_ddiv_64ns_64ns_64_13_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_13_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv5_reg_664),
    .din1(64'd4609047870845172685),
    .ce(1'b1),
    .dout(grp_fu_122_p2)
);

top_tx_sitodp_32s_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_2_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_127_p0),
    .ce(1'b1),
    .dout(grp_fu_127_p1)
);

top_tx_sitodp_32s_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_2_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_130_p0),
    .ce(1'b1),
    .dout(grp_fu_130_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv5_reg_664 <= grp_fu_130_p1;
        conv_reg_659 <= grp_fu_127_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_1_reg_674 <= grp_fu_122_p2;
        d_reg_669 <= grp_fu_117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln560_1_reg_684 <= select_ln560_1_fu_631_p3;
        select_ln560_reg_679 <= select_ln560_fu_388_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if (((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0))) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mapping_ce0 = 1'b1;
    end else begin
        mapping_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mapping_ce1 = 1'b1;
    end else begin
        mapping_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        temp1_im501_blk_n = temp1_im501_full_n;
    end else begin
        temp1_im501_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        temp1_im501_write = 1'b1;
    end else begin
        temp1_im501_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        temp1_re500_blk_n = temp1_re500_full_n;
    end else begin
        temp1_re500_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        temp1_re500_write = 1'b1;
    end else begin
        temp1_re500_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if ((~((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_461_p2 = (12'd1075 - zext_ln455_1_fu_421_p1);

assign F2_fu_218_p2 = (12'd1075 - zext_ln455_fu_178_p1);

assign add_ln570_1_fu_473_p2 = ($signed(F2_1_fu_461_p2) + $signed(12'd4082));

assign add_ln570_fu_230_p2 = ($signed(F2_fu_218_p2) + $signed(12'd4082));

assign and_ln570_1_fu_617_p2 = (xor_ln571_1_fu_611_p2 & icmp_ln570_1_fu_467_p2);

assign and_ln570_fu_374_p2 = (xor_ln571_fu_368_p2 & icmp_ln570_fu_224_p2);

assign and_ln571_1_fu_591_p2 = (xor_ln560_1_fu_585_p2 & icmp_ln571_1_fu_497_p2);

assign and_ln571_fu_348_p2 = (xor_ln560_fu_342_p2 & icmp_ln571_fu_254_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state18 = ((temp1_im501_full_n == 1'b0) | (temp1_re500_full_n == 1'b0));
end

assign ashr_ln575_1_fu_517_p2 = $signed(man_V_5_fu_447_p3) >>> zext_ln575_1_fu_513_p1;

assign ashr_ln575_fu_274_p2 = $signed(man_V_2_fu_204_p3) >>> zext_ln575_fu_270_p1;

assign exp_tmp_1_fu_411_p4 = {{ireg_1_fu_396_p1[62:52]}};

assign exp_tmp_fu_168_p4 = {{ireg_fu_153_p1[62:52]}};

assign grp_fu_127_p0 = $signed(mapping_q1);

assign grp_fu_130_p0 = $signed(mapping_q0);

assign icmp_ln560_1_fu_455_p2 = ((trunc_ln544_1_fu_399_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_212_p2 = ((trunc_ln544_fu_156_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_467_p2 = (($signed(F2_1_fu_461_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_224_p2 = (($signed(F2_fu_218_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_497_p2 = ((F2_1_fu_461_p2 == 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_254_p2 = ((F2_fu_218_p2 == 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln574_1_fu_507_p2 = ((sh_amt_1_fu_485_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_264_p2 = ((sh_amt_fu_242_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_1_fu_561_p2 = ((tmp_7_fu_551_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_318_p2 = ((tmp_4_fu_308_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_1_fu_396_p1 = d_1_reg_674;

assign ireg_fu_153_p1 = d_reg_669;

assign man_V_1_fu_198_p2 = (54'd0 - zext_ln558_fu_194_p1);

assign man_V_2_fu_204_p3 = ((p_Result_s_fu_160_p3[0:0] == 1'b1) ? man_V_1_fu_198_p2 : zext_ln558_fu_194_p1);

assign man_V_4_fu_441_p2 = (54'd0 - zext_ln558_1_fu_437_p1);

assign man_V_5_fu_447_p3 = ((p_Result_2_fu_403_p3[0:0] == 1'b1) ? man_V_4_fu_441_p2 : zext_ln558_1_fu_437_p1);

assign mapping_address0 = zext_ln541_1_fu_138_p1;

assign mapping_address1 = zext_ln541_fu_133_p1;

assign or_ln571_1_fu_605_p2 = (icmp_ln571_1_fu_497_p2 | icmp_ln560_1_fu_455_p2);

assign or_ln571_fu_362_p2 = (icmp_ln571_fu_254_p2 | icmp_ln560_fu_212_p2);

assign p_Result_1_fu_186_p3 = {{1'd1}, {trunc_ln554_fu_182_p1}};

assign p_Result_2_fu_403_p3 = ireg_1_fu_396_p1[32'd63];

assign p_Result_3_fu_429_p3 = {{1'd1}, {trunc_ln554_1_fu_425_p1}};

assign p_Result_s_fu_160_p3 = ireg_fu_153_p1[32'd63];

assign select_ln560_1_fu_631_p3 = ((icmp_ln560_1_fu_455_p2[0:0] == 1'b1) ? 16'd0 : select_ln570_2_fu_623_p3);

assign select_ln560_fu_388_p3 = ((icmp_ln560_fu_212_p2[0:0] == 1'b1) ? 16'd0 : select_ln570_fu_380_p3);

assign select_ln570_2_fu_623_p3 = ((and_ln570_1_fu_617_p2[0:0] == 1'b1) ? select_ln574_1_fu_543_p3 : select_ln571_1_fu_597_p3);

assign select_ln570_fu_380_p3 = ((and_ln570_fu_374_p2[0:0] == 1'b1) ? select_ln574_fu_300_p3 : select_ln571_fu_354_p3);

assign select_ln571_1_fu_597_p3 = ((and_ln571_1_fu_591_p2[0:0] == 1'b1) ? trunc_ln572_1_fu_503_p1 : select_ln592_1_fu_577_p3);

assign select_ln571_fu_354_p3 = ((and_ln571_fu_348_p2[0:0] == 1'b1) ? trunc_ln572_fu_260_p1 : select_ln592_fu_334_p3);

assign select_ln574_1_fu_543_p3 = ((icmp_ln574_1_fu_507_p2[0:0] == 1'b1) ? trunc_ln575_1_fu_523_p1 : select_ln574_3_fu_535_p3);

assign select_ln574_2_fu_292_p3 = ((tmp_fu_284_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln574_3_fu_535_p3 = ((tmp_6_fu_527_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln574_fu_300_p3 = ((icmp_ln574_fu_264_p2[0:0] == 1'b1) ? trunc_ln575_fu_280_p1 : select_ln574_2_fu_292_p3);

assign select_ln592_1_fu_577_p3 = ((icmp_ln592_1_fu_561_p2[0:0] == 1'b1) ? shl_ln593_1_fu_571_p2 : 16'd0);

assign select_ln592_fu_334_p3 = ((icmp_ln592_fu_318_p2[0:0] == 1'b1) ? shl_ln593_fu_328_p2 : 16'd0);

assign sext_ln570_1_fu_493_p1 = sh_amt_1_fu_485_p3;

assign sext_ln570_1cast_fu_567_p1 = sext_ln570_1_fu_493_p1[15:0];

assign sext_ln570_fu_250_p1 = sh_amt_fu_242_p3;

assign sext_ln570cast_fu_324_p1 = sext_ln570_fu_250_p1[15:0];

assign sh_amt_1_fu_485_p3 = ((icmp_ln570_1_fu_467_p2[0:0] == 1'b1) ? add_ln570_1_fu_473_p2 : sub_ln570_1_fu_479_p2);

assign sh_amt_fu_242_p3 = ((icmp_ln570_fu_224_p2[0:0] == 1'b1) ? add_ln570_fu_230_p2 : sub_ln570_fu_236_p2);

assign shl_ln593_1_fu_571_p2 = trunc_ln572_1_fu_503_p1 << sext_ln570_1cast_fu_567_p1;

assign shl_ln593_fu_328_p2 = trunc_ln572_fu_260_p1 << sext_ln570cast_fu_324_p1;

assign sub_ln570_1_fu_479_p2 = (12'd14 - F2_1_fu_461_p2);

assign sub_ln570_fu_236_p2 = (12'd14 - F2_fu_218_p2);

assign temp1_im501_din = select_ln560_1_reg_684;

assign temp1_re500_din = select_ln560_reg_679;

assign tmp_4_fu_308_p4 = {{sh_amt_fu_242_p3[11:4]}};

assign tmp_6_fu_527_p3 = ireg_1_fu_396_p1[32'd63];

assign tmp_7_fu_551_p4 = {{sh_amt_1_fu_485_p3[11:4]}};

assign tmp_fu_284_p3 = ireg_fu_153_p1[32'd63];

assign trunc_ln544_1_fu_399_p1 = ireg_1_fu_396_p1[62:0];

assign trunc_ln544_fu_156_p1 = ireg_fu_153_p1[62:0];

assign trunc_ln554_1_fu_425_p1 = ireg_1_fu_396_p1[51:0];

assign trunc_ln554_fu_182_p1 = ireg_fu_153_p1[51:0];

assign trunc_ln572_1_fu_503_p1 = man_V_5_fu_447_p3[15:0];

assign trunc_ln572_fu_260_p1 = man_V_2_fu_204_p3[15:0];

assign trunc_ln575_1_fu_523_p1 = ashr_ln575_1_fu_517_p2[15:0];

assign trunc_ln575_fu_280_p1 = ashr_ln575_fu_274_p2[15:0];

assign xor_ln560_1_fu_585_p2 = (icmp_ln560_1_fu_455_p2 ^ 1'd1);

assign xor_ln560_fu_342_p2 = (icmp_ln560_fu_212_p2 ^ 1'd1);

assign xor_ln571_1_fu_611_p2 = (or_ln571_1_fu_605_p2 ^ 1'd1);

assign xor_ln571_fu_368_p2 = (or_ln571_fu_362_p2 ^ 1'd1);

assign zext_ln455_1_fu_421_p1 = exp_tmp_1_fu_411_p4;

assign zext_ln455_fu_178_p1 = exp_tmp_fu_168_p4;

assign zext_ln541_1_fu_138_p1 = input1;

assign zext_ln541_fu_133_p1 = input2;

assign zext_ln558_1_fu_437_p1 = p_Result_3_fu_429_p3;

assign zext_ln558_fu_194_p1 = p_Result_1_fu_186_p3;

assign zext_ln575_1_fu_513_p1 = $unsigned(sext_ln570_1_fu_493_p1);

assign zext_ln575_fu_270_p1 = $unsigned(sext_ln570_fu_250_p1);

endmodule //top_tx_qpsk_Block_entry11_proc10
